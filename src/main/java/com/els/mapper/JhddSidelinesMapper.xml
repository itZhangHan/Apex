<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.els.mapper.JhddSidelinesMapper">
	<resultMap id="BaseResultMap" type="com.els.bean.JhddSidelines">
		<id column="sidelinesId" property="sidelinesid" jdbcType="INTEGER" />
		<result column="roomId" property="roomid" jdbcType="INTEGER" />
		<result column="userId" property="userid" jdbcType="INTEGER" />
		<result column="sidelineState" property="sidelinestate"
			jdbcType="TINYINT" />
	</resultMap>
	 
	<resultMap type="com.els.bean.JhddSidelines" id="UsersList">
		<id column="userId" property="userid" jdbcType="INTEGER" />
		<result column="userName" property="username" jdbcType="VARCHAR" />
		<result column="userPortrait" property="userportrait" jdbcType="VARCHAR" />
		<collection property="jhddSidelines" ofType="com.els.bean.JhddUsers" >
			<id column="userId" property="userid" jdbcType="INTEGER" />
			<result column="userName" property="username" jdbcType="VARCHAR" />
			<result column="userPortrait" property="userportrait" jdbcType="VARCHAR" />
			
		</collection>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		sidelinesId, roomId, userId, sidelineState
	</sql>
	<!-- 查询房间用户所有信息 -->
	<select id="selectUsersInfoByRoomId" parameterType="java.lang.Integer"
		resultMap="UsersList">
		SELECT
		a.userId, a.userName,a.userPortrait
		FROM
		jhdd_users a
		INNER JOIN jhdd_sidelines b ON a.userId = b.userId WHERE b.roomId=#{roomid}
	</select>
	<select id="selectUserIdsByRoomId" parameterType="java.lang.Integer" resultType="int">
	SELECT userId FROM jhdd_sidelines WHERE roomId=#{roomid}
	</select>
	<select id="selectUserStatusByUserid" parameterType="java.lang.Integer"
		resultType="int">
		SELECT sidelineState FROM `jhdd_sidelines` WHERE
		userId=#{userid};
	</select>
	<!-- 查询房间id -->
	<select id="selectRoomId" parameterType="java.lang.Integer"
		resultType="int">
		SELECT roomId FROM jhdd_sidelines WHERE sidelinesId =
		#{sidelinesId}
	</select>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.els.bean.JhddSidelinesExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from jhdd_sidelines
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<!-- 根据用户查询是否有属于用户房间 -->
	<select id="selectUserBelongRoom" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		SELECT * FROM `jhdd_sidelines` WHERE userId=#{userid};
	</select>
	<select id="selectLastSidelines" resultMap="BaseResultMap">
		SELECT
		*
		FROM
		jhdd_sidelines

		ORDER BY
		jhdd_sidelines.sidelinesId DESC
		LIMIT 1
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from jhdd_sidelines
		where sidelinesId = #{sidelinesid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		jhdd_sidelines
		where sidelinesId = #{sidelinesid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.els.bean.JhddSidelinesExample">
		delete from jhdd_sidelines
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<!-- *******************返回主键 -->
	<insert id="insert" parameterType="com.els.bean.JhddSidelines"
		useGeneratedKeys="true" keyProperty="id">
		insert into jhdd_sidelines (sidelinesId, roomId, userId,
		sidelineState)
		values (#{sidelinesid,jdbcType=INTEGER},
		#{roomid,jdbcType=INTEGER},
		#{userid,jdbcType=INTEGER},
		#{sidelinestate,jdbcType=TINYINT})

		<selectKey keyProperty="sidelinesid" order="AFTER"
			resultType="int">
			SELECT LAST_INSERT_ID() AS sidelinesid
		</selectKey>
	</insert>
	<insert id="insertSelective" parameterType="com.els.bean.JhddSidelines">
		insert into jhdd_sidelines
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="sidelinesid != null">
				sidelinesId,
			</if>
			<if test="roomid != null">
				roomId,
			</if>
			<if test="userid != null">
				userId,
			</if>
			<if test="sidelinestate != null">
				sidelineState,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="sidelinesid != null">
				#{sidelinesid,jdbcType=INTEGER},
			</if>
			<if test="roomid != null">
				#{roomid,jdbcType=INTEGER},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="sidelinestate != null">
				#{sidelinestate,jdbcType=TINYINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.els.bean.JhddSidelinesExample"
		resultType="java.lang.Integer">
		select count(*) from jhdd_sidelines
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update jhdd_sidelines
		<set>
			<if test="record.sidelinesid != null">
				sidelinesId = #{record.sidelinesid,jdbcType=INTEGER},
			</if>
			<if test="record.roomid != null">
				roomId = #{record.roomid,jdbcType=INTEGER},
			</if>
			<if test="record.userid != null">
				userId = #{record.userid,jdbcType=INTEGER},
			</if>
			<if test="record.sidelinestate != null">
				sidelineState = #{record.sidelinestate,jdbcType=TINYINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update jhdd_sidelines
		set sidelinesId =
		#{record.sidelinesid,jdbcType=INTEGER},
		roomId =
		#{record.roomid,jdbcType=INTEGER},
		userId =
		#{record.userid,jdbcType=INTEGER},
		sidelineState =
		#{record.sidelinestate,jdbcType=TINYINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.els.bean.JhddSidelines">
		update jhdd_sidelines
		<set>
			<if test="roomid != null">
				roomId = #{roomid,jdbcType=INTEGER},
			</if>
			<if test="userid != null">
				userId = #{userid,jdbcType=INTEGER},
			</if>
			<if test="sidelinestate != null">
				sidelineState = #{sidelinestate,jdbcType=TINYINT},
			</if>
		</set>
		where sidelinesId = #{sidelinesid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.els.bean.JhddSidelines">
		update
		jhdd_sidelines
		set roomId = #{roomid,jdbcType=INTEGER},
		userId =
		#{userid,jdbcType=INTEGER},
		sidelineState =
		#{sidelinestate,jdbcType=TINYINT}
		where sidelinesId =
		#{sidelinesid,jdbcType=INTEGER}
	</update>
</mapper>