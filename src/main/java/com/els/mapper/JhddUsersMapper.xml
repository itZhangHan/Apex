<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.els.mapper.JhddUsersMapper">
	<resultMap id="BaseResultMap" type="com.els.bean.JhddUsers">
		<id column="userId" property="userid" jdbcType="INTEGER" />
		<result column="userName" property="username" jdbcType="VARCHAR" />
		<result column="userPortrait" property="userportrait" jdbcType="VARCHAR" />
		<result column="userSex" property="usersex" jdbcType="BIT" />
		<result column="openid" property="openid" jdbcType="VARCHAR" />
		<result column="city" property="city" jdbcType="VARCHAR" />
	</resultMap>
<!--  类在这里-->
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		userId, userName, userPortrait, userSex, openid, city
	</sql>

	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.els.bean.JhddUsersExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from jhdd_users
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from jhdd_users
		where userId = #{userid,jdbcType=INTEGER}
	</select>
	<select id="selectByOpenid" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		*
		from jhdd_users
		where openId = #{openid}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		jhdd_users
		where userId = #{userid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.els.bean.JhddUsersExample">
		delete from jhdd_users
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<select id="selectLastInsertUserId" resultType="int">
		SELECT
		jhdd_users.userId FROM jhdd_users ORDER BY jhdd_users.userId DESC
		LIMIT 1
	</select>
	<insert id="insert" parameterType="com.els.bean.JhddUsers"
		useGeneratedKeys="true" keyProperty="id">
		insert into jhdd_users (userId, userName, userPortrait,
		userSex,
		openid, city)
		values (#{userid,jdbcType=INTEGER},
		#{username,jdbcType=VARCHAR},
		#{userportrait,jdbcType=VARCHAR},
		#{usersex,jdbcType=BIT}, #{openid,jdbcType=VARCHAR},
		#{city,jdbcType=VARCHAR})
		<selectKey keyProperty="userid" order="AFTER" resultType="int">
			SELECT LAST_INSERT_ID() AS userId
		</selectKey>
	</insert>
	<insert id="insertSelective" parameterType="com.els.bean.JhddUsers">
		insert into jhdd_users
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				userId,
			</if>
			<if test="username != null">
				userName,
			</if>
			<if test="userportrait != null">
				userPortrait,
			</if>
			<if test="usersex != null">
				userSex,
			</if>
			<if test="openid != null">
				openid,
			</if>
			<if test="city != null">
				city,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="userportrait != null">
				#{userportrait,jdbcType=VARCHAR},
			</if>
			<if test="usersex != null">
				#{usersex,jdbcType=BIT},
			</if>
			<if test="openid != null">
				#{openid,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.els.bean.JhddUsersExample"
		resultType="java.lang.Integer">
		select count(*) from jhdd_users
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update jhdd_users
		<set>
			<if test="record.userid != null">
				userId = #{record.userid,jdbcType=INTEGER},
			</if>
			<if test="record.username != null">
				userName = #{record.username,jdbcType=VARCHAR},
			</if>
			<if test="record.userportrait != null">
				userPortrait = #{record.userportrait,jdbcType=VARCHAR},
			</if>
			<if test="record.usersex != null">
				userSex = #{record.usersex,jdbcType=BIT},
			</if>
			<if test="record.openid != null">
				openid = #{record.openid,jdbcType=VARCHAR},
			</if>
			<if test="record.city != null">
				city = #{record.city,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update jhdd_users
		set userId = #{record.userid,jdbcType=INTEGER},
		userName = #{record.username,jdbcType=VARCHAR},
		userPortrait =
		#{record.userportrait,jdbcType=VARCHAR},
		userSex =
		#{record.usersex,jdbcType=BIT},
		openid =
		#{record.openid,jdbcType=VARCHAR},
		city =
		#{record.city,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.els.bean.JhddUsers">
		update jhdd_users
		<set>
			<if test="username != null">
				userName = #{username,jdbcType=VARCHAR},
			</if>
			<if test="userportrait != null">
				userPortrait = #{userportrait,jdbcType=VARCHAR},
			</if>
			<if test="usersex != null">
				userSex = #{usersex,jdbcType=BIT},
			</if>
			<if test="openid != null">
				openid = #{openid,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=VARCHAR},
			</if>
		</set>
		where userId = #{userid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.els.bean.JhddUsers">
		update jhdd_users
		set userName = #{username,jdbcType=VARCHAR},
		userPortrait =
		#{userportrait,jdbcType=VARCHAR},
		userSex = #{usersex,jdbcType=BIT},
		openid = #{openid,jdbcType=VARCHAR},
		city = #{city,jdbcType=VARCHAR}
		where userId = #{userid,jdbcType=INTEGER}
	</update>
</mapper>