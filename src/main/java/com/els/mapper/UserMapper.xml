<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.els.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.els.bean.User">
		<id column="uid" property="uid" jdbcType="INTEGER" />
		<result column="uname" property="uname" jdbcType="VARCHAR" />
		<result column="home_id" property="homeId" jdbcType="INTEGER" />
		<result column="homeowner" property="homeowner" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		uid, uname, home_id, homeowner, status
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.els.bean.UserExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where uid = #{uid,jdbcType=INTEGER}
	</select>
	<select id="selectMaxId" resultType="java.lang.Integer">
		select MAX(`user`.uid) from `user`
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where uid = #{uid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.els.bean.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.els.bean.User">
		insert into user (uid, uname, home_id,
		homeowner, status)
		values (#{uid,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR},
		#{homeId,jdbcType=INTEGER},
		#{homeowner,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.els.bean.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				uid,
			</if>
			<if test="uname != null">
				uname,
			</if>
			<if test="homeId != null">
				home_id,
			</if>
			<if test="homeowner != null">
				homeowner,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="uname != null">
				#{uname,jdbcType=VARCHAR},
			</if>
			<if test="homeId != null">
				#{homeId,jdbcType=INTEGER},
			</if>
			<if test="homeowner != null">
				#{homeowner,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.els.bean.UserExample"
		resultType="java.lang.Integer">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>

	<select id="findHomeOnwerName" parameterType="java.lang.Integer"
		resultType="java.lang.String">
		SELECT uname FROM `user` WHERE homeowner = 1 AND home_id=#{hid}
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.uid != null">
				uid = #{record.uid,jdbcType=INTEGER},
			</if>
			<if test="record.uname != null">
				uname = #{record.uname,jdbcType=VARCHAR},
			</if>
			<if test="record.homeId != null">
				home_id = #{record.homeId,jdbcType=INTEGER},
			</if>
			<if test="record.homeowner != null">
				homeowner = #{record.homeowner,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set uid = #{record.uid,jdbcType=INTEGER},
		uname = #{record.uname,jdbcType=VARCHAR},
		home_id = #{record.homeId,jdbcType=INTEGER},
		homeowner = #{record.homeowner,jdbcType=VARCHAR},
		status = #{record.status,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.els.bean.User">
		update user
		<set>
			<if test="uname != null">
				uname = #{uname,jdbcType=VARCHAR},
			</if>
			<if test="homeId != null">
				home_id = #{homeId,jdbcType=INTEGER},
			</if>
			<if test="homeowner != null">
				homeowner = #{homeowner,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where uid = #{uid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.els.bean.User">
		update user
		set uname = #{uname,jdbcType=VARCHAR},
		home_id = #{homeId,jdbcType=INTEGER},
		homeowner = #{homeowner,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER}
		where uid = #{uid,jdbcType=INTEGER}
	</update>
</mapper>